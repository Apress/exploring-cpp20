#!/usr/bin/env python3

import os, sys

program, name, source_dir, build_dir = sys.argv

from subprocess import Popen, PIPE, STDOUT
p = Popen([os.path.join(build_dir, name)], stdout=PIPE, stderr=STDOUT)
stdout, _ = p.communicate()

# Expect an exception.
if p.returncode == 0:
	print(output + "\nExited with code {0}".format(p.returncode))
	sys.exit(2)
else:
	with open(os.path.join(source_dir, "{0}.expected".format(name)), "rb") as f:
		expected = f.readlines()
	actual = stdout.splitlines(True)
	if expected != actual:
		import difflib
		for line in difflib.diff_bytes(difflib.context_diff, expected, actual, b'Expected', b'Actual'):
			sys.stdout.write(line.decode('latin1'))
		sys.exit(1)
